// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/String.jack

/**
 * Represents character strings. In addition for constructing and disposing
 * strings, the class features methods for getting and setting individual
 * characters of the string, for erasing the string's last character,
 * for appending a character to the string's end, and more typical
 * string-oriented operations.
 */
class String {
    field Array string;
    field int length;
    field int maximum;
    /** constructs a new empty string with a maximum length of maxLength
     *  and initial length of 0. */
    constructor String new(int maxLength) {
        if (maxLength=0){
            let maxLength=1;
        }
        let string = Array.new(maxLength);
        let length = 0;
        let maximum = maxLength;
        return this;
    }

    /** Disposes this string. */
    method void dispose() {
        do Array.dispose(string);
        return;
    }

    /** Returns the current length of this string. */
    method int length() {
        return length;
    }

    /** Returns the character at the j-th location of this string. */
    method char charAt(int j) {
        return string[j];
    }

    /** Sets the character at the j-th location of this string to c. */
    method void setCharAt(int j, char c) {
        let string[j] = c;
        return;
    }

    /** Appends c to this string's end and returns this string. */
    method String appendChar(char c) {
         
        if(length < maximum){
            let string[length] = c;
            let length = length + 1;
        }
        return this;
}

    /** Erases the last character from this string. */
    method void eraseLastChar() {
        let string[length]="";
        if (length>0){
            let length = length - 1;
        }
        return;
    }

    /** Returns the integer value of this string, 
     *  until a non-digit character is detected. */
     //example for 123
    method int intValue() {
        var boolean neg;
        var int sum;
        var int i;
        var int value;
        let value=0;
        let sum = 0;
        let i = 0;
        while (i<length) {
            if (string[i] = 45){
                let neg = true;
                let  i = i + 1;
            }
            else {
                let value = string[i] - 48; 
                let sum = sum * 10;
                let sum = sum + value;
                let  i = i + 1;
            } 
        }
        if (neg){
            return -sum;
        }
        else{
            return sum;
        }
        
    }

    /** Sets this string to hold a representation of the given value. */
    //0-9 == 48-57 ascii
    method void setInt(int val) {
        
        var int value;
        var int lastDig;
        var int i;
        var Array tempArray;
        var int c;
        let length=0;
        let tempArray = Array.new(14);
        let value = val;
        let i = 0;
        if (val<0){
            let value=-value;
            do appendChar(45);
        }
        while (value>10){
            let lastDig = String.mod(value,10);
            let value = value / 10;
            let tempArray[i] = lastDig + 48;
            let c = lastDig + 48;
            let i = i + 1;
        }
        let tempArray[i] = value+48; //appends last value
        
        //reverses tempArray puts it into string
        while (i>-1){
            do appendChar(tempArray[i]);
            let tempArray[i]=0;
            let i = i - 1;
        }
        
        return;
    }

    /** Returns the new line character. */
    function char newLine() {
        return 128;  //scan code for newline
    }

    /** Returns the backspace character. */
    function char backSpace() {
        return 129; //scan code for backspace
    }

    /** Returns the double quote (") character. */
    function char doubleQuote() {
        return 34; //scan code for "
    }
    function int mod(int x, int y){
        return (x-((x/y)*y));
    }

}
