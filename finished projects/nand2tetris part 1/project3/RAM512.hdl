// This file is part of the materials accompanying the book 
// "The Elements of Computing Systems" by Nisan and Schocken, 
// MIT Press. Book site: www.idc.ac.il/tecs
// File name: projects/03/b/RAM512.hdl

/**
 * Memory of 512 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Put your code here:
	//same as Ram64 except extend address in ram and change using RAM64 instead of RAM8
	RAM64(in=in,load=LoadOp0,address=address[0..5],out=Out0);
	RAM64(in=in,load=LoadOp1,address=address[0..5],out=Out1);
	RAM64(in=in,load=LoadOp2,address=address[0..5],out=Out2);
	RAM64(in=in,load=LoadOp3,address=address[0..5],out=Out3);
	RAM64(in=in,load=LoadOp4,address=address[0..5],out=Out4);
	RAM64(in=in,load=LoadOp5,address=address[0..5],out=Out5);
	RAM64(in=in,load=LoadOp6,address=address[0..5],out=Out6);
	RAM64(in=in,load=LoadOp7,address=address[0..5],out=Out7);
	
	DMux8Way(in=load,sel=address[6..8],a=LoadOp0,b=LoadOp1,c=LoadOp2,d=LoadOp3,e=LoadOp4,f=LoadOp5,g=LoadOp6,h=LoadOp7);
	Mux8Way16(a=Out0,b=Out1,c=Out2,d=Out3,e=Out4,f=Out5,g=Out6,h=Out7,sel=address[6..8],out=out);
	//tested completed
	
}