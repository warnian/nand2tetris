// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
	//same as 4k but you have to use Dmux4 since you only have 4 ram4k instead of 8r am512 in previous cases
	RAM4K(in=in,load=LoadOp0,address=address[0..11],out=Out0);
	RAM4K(in=in,load=LoadOp1,address=address[0..11],out=Out1);
	RAM4K(in=in,load=LoadOp2,address=address[0..11],out=Out2);
	RAM4K(in=in,load=LoadOp3,address=address[0..11],out=Out3);
	
	DMux4Way(in=load,sel=address[12..13],a=LoadOp0,b=LoadOp1,c=LoadOp2,d=LoadOp3);
	Mux4Way16(a=Out0,b=Out1,c=Out2,d=Out3,sel=address[12..13],out=out);
	//tested completed
}